@model CENTRAL79HUB
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Mvc;

@{
    ViewData["Title"] = "Details";
}
</br>
<h1 style="font-weight: bold">
    Details</h1>
<hr />

<div>
    <h4>OM-79</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Otherbox)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Otherbox)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.District)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.District)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.County)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.County)
        </dd>
    </dl>
    <input type="hidden" name="OM79ID" value="@ViewBag.testUniqueID" />

    @{
        // Replace 'yourPrimaryKey' with the actual primary key you want to pass
        var ID = ViewBag.testUniqueID; // Replace with your actual primary key value
            
    }



    
    <div id="OMContainer">
        @await Component.InvokeAsync("LinkedOM", new { hubId = ViewBag.testUniqueID })
    </div>


    @*
<div>
    <a href="@Url.Action("Create", "OM79", new { uniqueID = ViewBag.testUniqueID })" class="btn btn-primary">Add New Item Attached to OM-79</a>
</div>
*@
    <h4>PDF Generation</h4>
    <hr />
    <form asp-controller="FileGenerationAndPackaging" asp-action="PrintOM79HUBwOM79" method="post" style="display:inline;">
        <input type="hidden" name="id" value="@Model.OMId" />
        <button type="submit" class="btn btn-secondary">Export Packaged Document</button>
    </form>
    <hr />


    @* TODO

    @if (Model.IsSubmitted == true && Model.IsArchive != true)
    {
        <h4>Archive OM79</h4>
        <hr />
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#archiveModal">Archive</button>
        <hr />
    }
    *@
   



@*
<div id="signContainer" class="container">
    @await Component.InvokeAsync("LinkedSignatures", new { hubId = ViewBag.testUniqueID })
</div>
*@

    <div id="SignContainer" class="container">
        @await Component.InvokeAsync("LinkedSignaturesToSign", new { hubId = ViewBag.testUniqueID })
    </div>
</div>







@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5+5hb7ie3bYq4Z5p9FO8Q5v3kzMj2C4cfx9J2R7d" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.10.2/umd/popper.min.js" integrity="sha384-Xz/Q1C1/ScpE6MBT11Hcp3vnoHklkQ2Zn42YAd5GA4gp6x1G07aaR4RBOJNRHwVo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js" integrity="sha384-7rQfmU6cdwO01OXo3fdW8vht62yjRXlUJ3xHpBfR1VbF4w5E5YmN5Rp6SNFPz3Ql" crossorigin="anonymous"></script>
   @*  <script>
        function setIDNumber() {
            const idNumberInput = document.getElementById('idNumberInput').value;
            document.getElementById('hiddenIDNumber').value = idNumberInput;
        }
    </script> *@
    <script>
        document.getElementById('confirmArchiveButton').addEventListener('click', function () {
            var omId = @Model.OMId;
            window.location.href = '@Url.Action("ArchiveOM79", "CENTRAL79HUB", new { id = Model.OMId })';
        });
    </script>
    <script>
        $(document).ready(function () {
            $(".sign").click(function () {
                $("#sigtype").val(this.value)
                $("#signModal").modal('toggle')
            });
            $('.sign').siblings(':text').each(function () {
                // there's a better way to do this
                if ($(this).attr('placeholder') != "Traffic Engineer" && $(this).attr('placeholder') != "Maintenance Engineer" && $(this).attr('placeholder') != "Construction Engineer" && $(this).attr('placeholder') != "Right of Way Manager" && $(this).attr('placeholder') != "District Manager" && $(this).attr('placeholder') != "Bridge Engineer") {
                    $(this).siblings().addClass('disabled')
                }
            });
        });
    </script>
}

@using PJ103V3.Models.ViewModels
@model PJ103V3.Models.DB.Submission

@{
    Layout = "~/Views/Shared/_PJ103Layout.cshtml";
    ViewData["Title"] = "Create";
}


<style>
    .button-container {
        margin-top: 10px; /* Add desired margin value */
    }
</style>
<h1>PJ-103</h1>
<hr />
<div class="row">
    <form asp-action="Create" enctype="multipart/form-data">
        <h2>General Information</h2>
    <div class="row form-group">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-4">
                <label asp-for="County" class="control-label">@Html.DisplayNameFor(model => model.County)<span class="required-asterisk">*</span></label>
                <select asp-for="County" name="County" class="form-control" asp-items="@ViewBag.CountyDropdown"></select >
                <span asp-validation-for="County" class="text-danger"></span>
                
            </div>
            <div class="col-md-4">
                <label asp-for="SignSystem" class="control-label">@Html.DisplayNameFor(model => model.SignSystem)<span class="required-asterisk">*</span></label>
                <select asp-for="SignSystem" name="SignSystem" class="form-control" asp-items="@ViewBag.SignDropdown"></select>
                <span asp-validation-for="SignSystem" class="text-danger"></span>
                <div id="signError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="NatureOfChange" class="control-label">@Html.DisplayNameFor(model => model.NatureOfChange)<span class="required-asterisk">*</span></label>
                <select asp-for="NatureOfChange" name="NatureOfChange" class="form-control" asp-items="@ViewBag.NatureDropdown"></select>
                <span asp-validation-for="NatureOfChange" class="text-danger"></span>
                <div id="natureError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="ProjectNumber" class="control-label"></label>
                <input asp-for="ProjectNumber" class="form-control" />
                <span asp-validation-for="ProjectNumber" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="RouteNumber" class="control-label">@Html.DisplayNameFor(model => model.RouteNumber)<span class="required-asterisk">*</span></label>
                <input asp-for="RouteNumber" class="form-control" type="number" step="1" min="0" max="9999" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="RouteNumber" class="text-danger"></span>
                <div id="routeNumberError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="SubRouteNumber" class="control-label">@Html.DisplayNameFor(model => model.SubRouteNumber)<span class="required-asterisk">*</span></label>
                <input asp-for="SubRouteNumber" class="form-control" type="number" step="1" min="0" max="99" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="SubRouteNumber" class="text-danger"></span>
                <div id="subRouteNumberError" class="text-danger"></div>
            </div>
           
         @*   <div class="col-md-4">
                <label asp-for="DateComplete" class="control-label"></label>
                <input asp-for="DateComplete" class="form-control" Value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")"/> @*Auto Populates Current Date/Time
                <span asp-validation-for="DateComplete" class="text-danger"></span>
            </div>  *@
            <div class="col-md-4">
                <label asp-for="StartingMilePoint" class="control-label">@Html.DisplayNameFor(model => model.StartingMilePoint)<span class="required-asterisk">*</span></label>
                <input asp-for="StartingMilePoint" class="form-control" type="number" step="any" min="0" onkeydown="validatePositiveNumber(event)"/> @*Only allows positive ints*@
                <span asp-validation-for="StartingMilePoint" class="text-danger"></span>
                <div id="startingMilePointError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="EndingMilePoint" class="control-label">@Html.DisplayNameFor(model => model.EndingMilePoint)<span class="required-asterisk">*</span></label>
                <input asp-for="EndingMilePoint" class="form-control" type="number" step="any" min="0" onkeydown="validatePositiveNumber(event)" /> @*Only allows positive ints*@
                <span asp-validation-for="EndingMilePoint" class="text-danger"></span>
                <div id="endingMilePointError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="MaintOrg" class="control-label">@Html.DisplayNameFor(model => model.MaintOrg)</label>
                <select asp-for="MaintOrg" name="MaintOrg" class="form-control" asp-items="@ViewBag.DOHDropdown"></select>
                <span asp-validation-for="MaintOrg" class="text-danger"></span>
                <div id="maintOrgError" class="text-danger"></div>
            </div>
          @*  <div class="col-md-4">
                <label asp-for="YearOfSurvey" class="control-label"></label>
                <select asp-for="YearOfSurvey" class="form-control" style="color: #000;">
                    <option value="">Select Year</option>
                    @for (int year = 2025; year >= 1950; year--) 
                    {
                        <option value="@year">@year</option>
                    }
                </select>
                <span asp-validation-for="YearOfSurvey" class="text-danger"></span>
                
             
            </div>
            *@
            <div class="col-md-4">
                <label asp-for="BridgeInv" class="control-label">@Html.DisplayNameFor(model => model.BridgeInv)<span class="required-asterisk">*</span></label>
                <select asp-for="BridgeInv" name="BridgeInv" class="form-control" asp-items="@ViewBag.BridgeDropdown"></select>
                <span asp-validation-for="BridgeInv" class="text-danger"></span>
                <div id="bridgeInvError" class="text-danger"></div>
            </div>
            <div class="col-md-4">
                <label asp-for="RailroadInv" class="control-label">@Html.DisplayNameFor(model => model.RailroadInv)<span class="required-asterisk">*</span></label>
                <select asp-for="RailroadInv" name="RailroadInv" class="form-control" asp-items="@ViewBag.RRDropdown"></select>
                <span asp-validation-for="RailroadInv" class="text-danger"></span>
                <div id="railroadInvError" class="text-danger"></div>
            </div>

        @*    @Html.Partial("_UnitAsBuilt") *@
                


            <div id="unitAsBuiltContainer"></div>
            <div id="BridgeRRContainer"></div>
            <div id="RRContainer"></div>
            <div id="SpanContainer"></div>


            <div>
            <br />
            </div>


            <div class="form-group">
                <label for="attachments">Attach Files:</label>
                <input type="file" name="attachments" multiple>
            </div>

            <div class="form-group button-container">
                <input type="submit" value="Create"  class="btn btn-primary" />
          @*      <input type="submit" value="Append" class="btn btn-primary" /> *@
            </div>
           
        </form>
    </div>
    <p><br></p>
    <style>
    .legend-container {
        display: flex;
    }

    .legend-row {
        flex: 0 0 33.33%;
        max-width: 33.33%;
        padding: 5px;
        box-sizing: border-box;
    }
</style>

<!-- Legend Box -->
<div class="row form-group">
    <div class="col-md-12">
        <fieldset style="border: 1px solid #000; padding: 10px;">
            <legend style="text-align: center;">Legend</legend>
            <div class="legend-container">
                <div class="legend-row">
                    <p><strong>MP</strong> - Mile Point</p>
                    <p><strong>NHS</strong> - National Highway System</p>
                </div>
                <div class="legend-row">
                    <p><strong>CO</strong> - County Route</p>
                    <p><strong>FANS</strong> - Federal Aid Non-State</p>
                    <p><strong>BARS</strong> - Bridge Number</p>
                </div>
                <div class="legend-row">
                    <p><strong>HARP</strong> - Home Access Roads Program</p>
                    <p><strong>ARC</strong> - Appalachian Regional Commission</p>
                    <p><strong>STP</strong> - Surface Transportation Program</p>
                </div>
            </div>
        </fieldset>
    </div>
</div>
    

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    
    
   
   
    <script>
        // Function to validate positive numbers
        function validatePositiveNumber(event) {
            if (event.keyCode === 189 || event.keyCode === 109) {
                event.preventDefault(); // Doesn't allow - 
            }
        }
    </script>

    <script>
        // Function to validate positive numbers
        function validatePositiveNumberAndDecimal(event) {
            if (event.keyCode === 189 || event.keyCode === 109 || event.key === ".") {
                event.preventDefault(); // Doesn't allow - 
            }
        }
    </script>


    <script>
        $(document).ready(function () {
            $('#BridgeInv').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue == "True") {
                    $.ajax({
                        url: '@Url.Action("GetBridgeRRPartial", "PJ103")',
                        type: 'GET',
                        data: { RailroadInv: selectedValue },
                        success: function (result) {
                            $('#BridgeRRContainer').html(result);
                           $.validator.unobtrusive.parse('#BridgeRRContainer form');
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                } else {
                    $('#BridgeRRContainer').empty();
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#RailroadInv').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue == "True") {
                    $.ajax({
                        url: '@Url.Action("GetRRPartial", "PJ103")',
                        type: 'GET',
                        data: { RailroadInv: selectedValue },
                        success: function (result) {
                            $('#RRContainer').html(result);
                            $.validator.unobtrusive.parse('#RRContainer form');
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                } else {
                    $('#RRContainer').empty();
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#NatureOfChange').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue !== "") {
                    $.ajax({
                        url: '@Url.Action("GetUnitAsBuiltPartial", "PJ103")',
                        type: 'GET',
                        data: { natureOfChange: selectedValue },
                        success: function (result) {
                            $('#unitAsBuiltContainer').html(result);
                            $.validator.unobtrusive.parse('#unitAsBuiltContainer');
        
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
        
                    });
                } else {
                    $('#unitAsBuiltContainer').empty();
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('body').on('change', '#NumberOfSpans', function () {
                var selectedValue = $(this).val();
                if (selectedValue !== "") {
                    $.ajax({
                        url: '@Url.Action("GetSpanPartial", "PJ103")',
                        type: 'GET',
                        data: { NumberOfSpans: selectedValue },
                        success: function (result) {
                            $('#SpanContainer').html(result);
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                } else {
                    $('#SpanContainer').empty();
                }
            });
        });
    </script>
         <script>
        $(document).ready(function () {
        $('#NatureOfChange').change(function () {
        var selectedValue = $(this).val();
        if (selectedValue !== "") {
        $('#NatureOfChange option[value=""]').prop('disabled', true);
        } else {
        $('#NatureOfChange option[value=""]').prop('disabled', false);
        }
        });
        });
    </script>
           
        
    <script>
            $(document).ready(function () {
                $('#NatureOfChange').on('click', function () {
                    $('#NatureOfChange option[value=""]').prop('disabled', true);
                });
            });
    </script>
    <script>
        $(document).ready(function () {
            $('#MaintOrg').on('click', function () {
                $('#MaintOrg option[value=""]').prop('disabled', true);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#BridgeInv').on('click', function () {
                $('#BridgeInv option[value=""]').prop('disabled', true);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#RailroadInv').on('click', function () {
                $('#RailroadInv option[value=""]').prop('disabled', true);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#YearOfSurvey').on('click', function () {
                $('#YearOfSurvey option[value=""]').prop('disabled', true);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#County').on('click', function () {
                $('#County option[value=""]').prop('disabled', true);
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#SignSystem').on('click', function () {
                $('#SignSystem option[value=""]').prop('disabled', true);
            });
        });
    </script>
    

    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #AccessControl').on('click', function () {
                    $('#AccessControl option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded2() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #ReverseLanes').on('click', function () {
                    $('#ReverseLanes option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded2();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded2();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded3() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #SpecialSys').on('click', function () {
                    $('#SpecialSys option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded3();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded3();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded4() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #FacilityType').on('click', function () {
                    $('#FacilityType option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded4();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded4();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded5() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #FederalAid').on('click', function () {
                    $('#FederalAid option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded5();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded5();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded6() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #FedForestHighway').on('click', function () {
                    $('#FedForestHighway option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded6();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded6();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded7() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #MedianType').on('click', function () {
                    $('#MedianType option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded7();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded7();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded8() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #NHS').on('click', function () {
                    $('#NHS option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded8();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded8();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded9() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #TruckRoute').on('click', function () {
                    $('#TruckRoute option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded9();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded9();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded10() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #GovIDOwnership').on('click', function () {
                    $('#GovIDOwnership option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded10();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded10();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded11() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #WVlegalClass').on('click', function () {
                    $('#WVlegalClass option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded11();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded11();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded12() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #FunctionalClass').on('click', function () {
                    $('#FunctionalClass option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded12();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded12();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded13() {
                // Target the elements within the loaded partial view
                $('#unitAsBuiltContainer #SurfaceTypeN').on('click', function () {
                    $('#SurfaceTypeN option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#unitAsBuiltContainer').children().length > 0) {
                afterPartialViewLoaded13();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#unitAsBuiltContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded13();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to run after the partial view is loaded
            function afterPartialViewLoaded14() {
                // Target the elements within the loaded partial view
                $('#BridgeRRContainer #BridgeSurfaceType').on('click', function () {
                    $('#BridgeSurfaceType option[value=""]').prop('disabled', true);
                    // Add any additional scripts or logic here that should run after the click event on the "AccessControl" element in the partial view.
                });
            }

            // Check if the partial view is already loaded and call the function directly
            if ($('#BridgeRRContainer').children().length > 0) {
                afterPartialViewLoaded14();
            } else {
                // If the partial view is not loaded yet, wait for it to be added to the DOM and then call the function.
                $('#BridgeRRContainer').on('DOMNodeInserted', function () {
                    afterPartialViewLoaded14();
                });
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to validate the form fields
            function validateForm() {
                var isValid = true;

                // Get the values of PavementWidth and MedianWidth fields
                var bridgeName = $("#BridgeName").val();
                var bridgeNumber = $("#BridgeNumber").val();
                var bridgeSurfaceType = $("#BridgeSurfaceType").val();
                var bridgeStart = $("#StationBeginMP").val();
                var bridgeEnd = $("#StationEndMP").val();
                var bridgeWidth = $("#BridgeWidth").val();
               var crossingName = $("#CrossingName").val();
                var railroadMP = $("#RailRoadMP").val();
                var pavementWidth = $("#PavementWidth").val();
                var gradeWidth = $("#GradeWidth").val();
             //   var medianWidth = $("#MedianWidth").val();
                var signSystem = $("#SignSystem").val();
                var natureOfChange = $("#NatureOfChange").val();
                var routeNumber = $("#RouteNumber").val();
                var subRouteNumber = $("#SubRouteNumber").val();
                var startingMilePoint = $("#StartingMilePoint").val();
                var endingMilePoint = $("#EndingMilePoint").val();
             //   var maintOrg = $("#MaintOrg").val();
              //  var yearOfSurvey = $("#YearOfSurvey").val();
                var bridgeInv = $("#BridgeInv").val();
                var railroadInv = $("#RailroadInv").val();
                
                
            if (bridgeInv.trim() === 'True')
            {
               if (bridgeName.trim() === '') {
                  $("#bridgeNameError").text("Bridge Name is required.");
                  isValid = false;
              } else {
                    $("#bridgeNameError").text("");
              }
                    if (bridgeNumber.trim() === '') {
                        $("#bridgeNumberError").text("Bridge Number is required.");
                        isValid = false;
                    } else {
                        $("#bridgeNumberError").text("");
                    }
                    if (bridgeSurfaceType.trim() === '') {
                        $("#bridgeSurfaceTypeError").text("Bridge Surface Type is required.");
                        isValid = false;
                    } else {
                        $("#bridgeSurfaceTypeError").text("");
                    }
                    if (bridgeStart.trim() === '') {
                        $("#bridgeStartError").text("Bridge Start MP is required.");
                        isValid = false;
                    } else {
                        $("#bridgeStartError").text("");
                    }
                    if (bridgeEnd.trim() === '') {
                        $("#bridgeEndError").text("Bridge End MP is required.");
                        isValid = false;
                    } else {
                        $("#bridgeEndError").text("");
                    }
                    if (bridgeWidth.trim() === '') {
                        $("#bridgeWidthError").text("Bridge Width is required.");
                        isValid = false;
                    } else {
                        $("#bridgeWidthError").text("");
                    }

            }
            if (railroadInv.trim() === 'True') 
            {

            
               if (crossingName.trim() === '') {
                   $("#crossingNameError").text("Crossing Name is required.");
                   isValid = false;
               } else {
                    $("#crossingNameError").text("");
                }

                if (railroadMP.trim() === '') {
                    $("#railroadMPError").text("RailRoad MP is required.");
                   isValid = false;
                } else {
                    $("#railroadMPError").text("");
                }
                }

                // Check if PavementWidth is empty
                if (pavementWidth.trim() === '') {
                    $("#pavementWidthError").text("Roadway Width is required.");
                    isValid = false;
                } else {
                    $("#pavementWidthError").text("");
                }

                // Check if MedianWidth is empty
             //   if (medianWidth.trim() === '') {
             //       $("#medianWidthError").text("Median Width is required.");
             //       isValid = false;
             //   } else {
             //       $("#medianWidthError").text("");
             //  }

                if (gradeWidth.trim() === '') {
                    $("#gradeWidthError").text("Grade Width is required.");
                    isValid = false;
                } else {
                    $("#gradeWidthError").text("");
                }

                if (signSystem.trim() === '') {
                    $("#signError").text("Sign System is required.");
                    isValid = false;
                } else {
                    $("#signError").text("");
                }

                if (natureOfChange.trim() === '') {
                    $("#natureError").text("Nature Of Change is required.");
                    isValid = false;
                } else {
                    $("#natureError").text("");
                }

                if (routeNumber.trim() === '') {
                    $("#routeNumberError").text("Route Number is required.");
                    isValid = false;
                } else {
                    $("#routeNumberError").text("");
                }

                if (subRouteNumber.trim() === '') {
                    $("#subRouteNumberError").text("Subroute Number is required.");
                    isValid = false;
                } else {
                    $("#subRouteNumberError").text("");
                }

                if (startingMilePoint.trim() === '') {
                    $("#startingMilePointError").text("Starting MP is required.");
                    isValid = false;
                } else {
                    $("#startingMilePointError").text("");
                }

                if (endingMilePoint.trim() === '') {
                    $("#endingMilePointError").text("Ending MP is required.");
                    isValid = false;
                } else {
                    $("#endingMilePointError").text("");
                }

              //  if (maintOrg.trim() === '') {
              //      $("#maintOrgError").text("Maintenance Org is required.");
              //      isValid = false;
             //   } else {
              //      $("#maintOrgError").text("");
              //  }

            //    if (yearOfSurvey.trim() === '') {
             //       $("#yearOfSurveyError").text("Year of Survey is required.");
              //      isValid = false;
             //   } else {
             //       $("#yearOfSurveyError").text("");
             //   }

                if (bridgeInv.trim() === '') {
                    $("#bridgeInvError").text("Please select Yes or No.");
                    isValid = false;
                } else {
                    $("#bridgeInvError").text("");
                }

                if (railroadInv.trim() === '') {
                    $("#railroadInvError").text("Please select Yes or No.");
                    isValid = false;
                } else {
                    $("#railroadInvError").text("");
                }
               

                

                return isValid;
            }

            // Attach submit event to the form
            $(document).submit(function (e) {
                if (!validateForm()) {
                    // Prevent the form submission if validation fails
                    e.preventDefault();
                }
            });
        });
    </script>

    

    
    
}
<style>
     .button-container {
         margin-top: 10px; /* Add desired margin value */
     }

     .required-asterisk {
         font-size: 24px;
         color: red;
     }
</style>

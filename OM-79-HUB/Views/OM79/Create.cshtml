@model OMTable

@{
    Layout = "~/Views/Shared/_OM79Layout.cshtml";
    ViewData["Title"] = "Create";
}


</br>
<h2 style="font-weight: bold">Changes to the State Road System</h2>
<hr />
<div class="row">

    <form asp-action="Create" method="post" enctype="multipart/form-data">
        <div class="row form-group">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
          @*  <div class="col-md-4">
                <label asp-for="DistrictNumber" class="control-label">@Html.DisplayNameFor(model => model.DistrictNumber) <span class="required-asterisk">*</span></label>
                <select asp-for="DistrictNumber" name="DistrictNumber" class="form-control" id="districtDropdown" asp-items=@ViewBag.DDropdown> </select>
                <span asp-validation-for="DistrictNumber" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="County" class="control-label">@Html.DisplayNameFor(model => model.County) <span class="required-asterisk">*</span></label>
                <select asp-for="County" name="County" class="form-control" id="countyDropdown" asp-items=@ViewBag.CountyDropdown></select>
                <span asp-validation-for="County" class="text-danger"></span>
            </div>
            *@
            <br>
            
            <h4> The District requests a Commissioner's Order be entered to implement the following road change(s):</h4>
            <hr />
            </br>
            <h3>Road Change Type</h3>
            
            <div class="col-md-4">
                <label asp-for="RoadChangeType" class="control-label">@Html.DisplayNameFor(model => model.RoadChangeType) <span class="required-asterisk">*</span></label>
                <select asp-for="RoadChangeType" name="RoadChangeType" class="form-control" id="RoadChangeType" asp-items=@ViewBag.RCTDropdown></select>
                <span asp-validation-for="RoadChangeType" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="RoadContainer" style="display:none;">
                <label asp-for="CoDate" class="control-label">@Html.DisplayNameFor(model => model.CoDate) <span class="required-asterisk">*</span></label>
                <input asp-for="CoDate" class="form-control" />
                <span asp-validation-for="CoDate" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="CoDateTwoContainer" style="display:none;">
                <label asp-for="CoDateTwo" class="control-label">@Html.DisplayNameFor(model => model.CoDateTwo)</label>
                <input asp-for="CoDateTwo" class="form-control" />
                <span asp-validation-for="CoDateTwo" class="text-danger"></span>
            </div>

            <div class="col-md-4" id="OtherboxContainer" style="display:none;">
                <label asp-for="Otherbox" class="control-label">@Html.DisplayNameFor(model => model.Otherbox) <span class="required-asterisk">*</span></label>
                <input asp-for="Otherbox" class="form-control" />
                <span asp-validation-for="Otherbox" class="text-danger"></span>

            </div>
            <div class="col-md-4">
                <label asp-for="RequestedBy" class="control-label">@Html.DisplayNameFor(model => model.RequestedBy) <span class="required-asterisk">*</span></label>
                <select asp-for="RequestedBy" name="RequestedBy" class="form-control" asp-items=@ViewBag.RequestDropdown></select>
                <span asp-validation-for="RequestedBy" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="RequestedByNameContainer" style="display:none;">
                <label asp-for="RequestedByName" class="control-label">@Html.DisplayNameFor(model => model.RequestedByName) <span class="required-asterisk">*</span></label>
                <input asp-for="RequestedByName" class="form-control" />
                <span asp-validation-for="RequestedByName" class="text-danger"></span>
            </div>
            <div class="col-md-12">
                <label asp-for="Attachments" class="control-label">@Html.DisplayNameFor(model => model.Attachments) <span class="required-asterisk">*</span></label>
                <textarea asp-for="Attachments" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Attachments" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="RouteAssignment" class="control-label">@Html.DisplayNameFor(model => model.RouteAssignment) <span class="required-asterisk">*</span></label>
                <select asp-for="RouteAssignment" name="RouteAssignment" class="form-control" asp-items=@ViewBag.RADropdown></select>
                <span asp-validation-for="RouteAssignment" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Route" class="control-label">@Html.DisplayNameFor(model => model.Route) <span class="required-asterisk">*</span></label>
                <input asp-for="Route" class="form-control" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="Route" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="SubRoute" class="control-label">@Html.DisplayNameFor(model => model.SubRoute) <span class="required-asterisk">*</span></label>
                <input asp-for="SubRoute" class="form-control" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="SubRoute" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Supplemental" class="control-label">@Html.DisplayNameFor(model => model.Supplemental) <span class="required-asterisk">*</span></label>
                <select asp-for="Supplemental" name="Supplemental" class="form-control" asp-items=@ViewBag.SuppDropdown></select>
                <span asp-validation-for="Supplemental" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="RightOfWayWidth" class="control-label">@Html.DisplayNameFor(model => model.RightOfWayWidth)</label>
                <select asp-for="RightOfWayWidth" name="RightOfWayWidth" class="form-control" asp-items=@ViewBag.ROWDropdown></select>
                <span asp-validation-for="RightOfWayWidth" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="RightOtherContainer" style="display:none;">
                <label asp-for="RightOther" class="control-label">@Html.DisplayNameFor(model => model.RightOther) <span class="required-asterisk">*</span></label>
                <input asp-for="RightOther" class="form-control" />
                <span asp-validation-for="RightOther" class="text-danger"></span>

            </div>
            
            


            <div class="col-md-12">
                <label asp-for="Comments" class="control-label">@Html.DisplayNameFor(model => model.Comments) (IE Project Numbers, Plan Numbers, etc.)</label>
                <input asp-for="Comments" class="form-control" />
                <span asp-validation-for="Comments" class="text-danger"></span>
                <br />
                <h3>Adjacent Property</h3>
                

            </div>
            
            <div class="col-md-4">
                <label asp-for="APHouses" class="control-label"></label>
                <input asp-for="APHouses" class="form-control calculate-sum" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="APHouses" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="APBusinesses" class="control-label"></label>
                <input asp-for="APBusinesses" class="form-control calculate-sum" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="APBusinesses" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="APSchools" class="control-label"></label>
                <input asp-for="APSchools" class="form-control calculate-sum" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="APSchools" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="APOther" class="control-label"></label>
                <input asp-for="APOther" class="form-control calculate-sum" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="APOther" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="APOtherIdentifyContainer" style="display:none;">
                <label asp-for="APOtherIdentify" class="control-label">@Html.DisplayNameFor(model => model.APOtherIdentify) <span class="required-asterisk">*</span></label>
                <input asp-for="APOtherIdentify" class="form-control" />
                <span asp-validation-for="APOtherIdentify" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="AdjacentProperty" class="control-label">@Html.DisplayNameFor(model => model.AdjacentProperty) <span id="asteriskContainer"> </span></label>
                <input asp-for="AdjacentProperty" class="form-control" type="number" min="0" readonly onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="AdjacentProperty" class="text-danger"></span>
            </div>
            </br>
            <h3>Bridge/Railroad Information</h3>
            
            <div class="col-md-4">
                <label asp-for="BridgeInv" class="control-label">@Html.DisplayNameFor(model => model.BridgeInv)<span class="required-asterisk">*</span></label>
                <select asp-for="BridgeInv" name="BridgeInv" class="form-control" asp-items="@ViewBag.TFDropdown"></select>
                <span asp-validation-for="BridgeInv" class="text-danger"></span>
                <div id="bridgeInvError" class="text-danger"></div>
            </div>
            <div class="col-md-4" id="BridgeAmountContainer" style ="display:none;">
                <label asp-for="BridgeAmount" class="control-label">@Html.DisplayNameFor(model => model.BridgeAmount)<span class="required-asterisk">*</span></label>
                <input asp-for="BridgeAmount" class="form-control" min="0" onkeydown="validatePositiveNumber(event)" />
                <span asp-validation-for="BridgeAmount" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="BridgeNumbersContainer" style="display:none;">
                <label asp-for="BridgeNumbers" class="control-label">@Html.DisplayNameFor(model => model.BridgeNumbers) <span class="required-asterisk">*</span></label>
                <input asp-for="BridgeNumbers" class="form-control" />
                <span asp-validation-for="BridgeNumbers" class="text-danger"></span>
            </div>
            <div class="row"></div>
            <div class="col-md-4">
                <label asp-for="RailroadInv" class="control-label">@Html.DisplayNameFor(model => model.RailroadInv)<span class="required-asterisk">*</span></label>
                <select asp-for="RailroadInv" name="RailroadInv" class="form-control" asp-items="@ViewBag.TFDropdown"></select>
                <span asp-validation-for="RailroadInv" class="text-danger"></span>
                <div id="railroadInvError" class="text-danger"></div>
            </div>
            <div class="col-md-4" id="RailroadAmountContainer" style="display:none;">
                <label asp-for="RailroadAmount" class="control-label">@Html.DisplayNameFor(model => model.RailroadAmount) <span class="required-asterisk">*</span></label>
                <input asp-for="RailroadAmount" class="form-control" />
                <span asp-validation-for="RailroadAmount" class="text-danger"></span>
            </div>
            <div class="col-md-4" id="DOTAARNumberContainer" style="display:none;">
                <label asp-for="DOTAARNumber" class="control-label">@Html.DisplayNameFor(model => model.DOTAARNumber) <span class="required-asterisk">*</span></label>
                <input asp-for="DOTAARNumber" class="form-control" />
                <span asp-validation-for="DOTAARNumber" class="text-danger"></span>
            </div>
            </br>
            <h3>General Information</h3>
            
            <div class="row form-group">
                
               
     <div class="col-md-4">
                    <label asp-for="SignSystem" class="control-label">@Html.DisplayNameFor(model => model.SignSystem)<span class="required-asterisk">*</span></label>
                    <select asp-for="SignSystem" name="SignSystem" class="form-control" asp-items="@ViewBag.SignDropdown"></select>
                    <span asp-validation-for="SignSystem" class="text-danger"></span>
                    <div id="signError" class="text-danger"></div>
     </div>
                
                <div class="col-md-4">
                    <label asp-for="ProjectNumber" class="control-label"></label>
                    <input asp-for="ProjectNumber" class="form-control" />
                    <span asp-validation-for="ProjectNumber" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="DateComplete" class="control-label"></label>
                    <input asp-for="DateComplete" class="form-control" Value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")" />
                    <span asp-validation-for="DateComplete" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="RouteNumber" class="control-label">@Html.DisplayNameFor(model => model.RouteNumber)<span class="required-asterisk">*</span></label>
                    <input asp-for="RouteNumber" class="form-control" type="number" step="1" min="0" max="9999" onkeydown="validatePositiveNumber(event)" />
                    <span asp-validation-for="RouteNumber" class="text-danger"></span>
                    <div id="routeNumberError" class="text-danger"></div>
                </div>
                <div class="col-md-4">
                    <label asp-for="SubRouteNumber" class="control-label">@Html.DisplayNameFor(model => model.SubRouteNumber)<span class="required-asterisk">*</span></label>
                    <input asp-for="SubRouteNumber" class="form-control" type="number" step="1" min="0" max="99" onkeydown="validatePositiveNumber(event)" />
                    <span asp-validation-for="SubRouteNumber" class="text-danger"></span>
                    <div id="subRouteNumberError" class="text-danger"></div>
                </div>
                <div class="col-md-4">
                    <label asp-for="MaintOrg" class="control-label">@Html.DisplayNameFor(model => model.MaintOrg)</label>
                    <select asp-for="MaintOrg" name="MaintOrg" class="form-control" asp-items="@ViewBag.DOHDropdown"></select>
                    <span asp-validation-for="MaintOrg" class="text-danger"></span>
                    <div id="maintOrgError" class="text-danger"></div>
                </div>

                 
                <div class="col-md-4">
                <label asp-for="StartingMilePoint" class="control-label">@Html.DisplayNameFor(model => model.StartingMilePoint)<span class="required-asterisk">*</span></label>
                <input asp-for="StartingMilePoint" class="form-control" type="number" step="any" min="0" onkeydown="validatePositiveNumber(event)"/> 
                <span asp-validation-for="StartingMilePoint" class="text-danger"></span>
                <div id="startingMilePointError" class="text-danger"></div>
                </div>
                <div class="col-md-4">
                <label asp-for="EndingMilePoint" class="control-label">@Html.DisplayNameFor(model => model.EndingMilePoint)<span class="required-asterisk">*</span></label>
                <input asp-for="EndingMilePoint" class="form-control" type="number" step="any" min="0" onkeydown="validatePositiveNumber(event)" /> 
                <span asp-validation-for="EndingMilePoint" class="text-danger"></span>
                <div id="endingMilePointError" class="text-danger"></div>
                </div>
                
                <div class="col-md-4">
                <label asp-for="YearOfSurvey" class="control-label"></label>
                <select asp-for="YearOfSurvey" class="form-control" style="color: #000;">
                <option value="">Select Year</option>
                @for (int year = 2025; year >= 1950; year--)
                {
                <option value="@year">@year</option>
                }
                </select>
                <span asp-validation-for="YearOfSurvey" class="text-danger"></span>


                </div>
            <input type="hidden" name="HubId" value="@ViewBag.testUniqueID" />

            
            <h4><br />Attachments<br /></h4>
            <p>Examples: Checklists, Location Maps, and Research</p>

                <div class="form-group">
                    <label for="attachments">Attach Files:</label>
                    <input type="file" id="fileInput" name="attachments" multiple style="display: none;">
                    <button type="button" class="btn btn-info" onclick="document.getElementById('fileInput').click();">Add Files</button>
                    <ul id="fileList" class="list-unstyled"></ul>
                </div>

                <br />
                <br />
                <div id="fileInfo"></div> <!-- Add this div to display file information -->
                <br />

                @*
@*                <div class="form-group">
                    <button type="button" class="btn btn-info" id="addNewFile">Add New Files</button>
                    <ul id="fileList" class="list-unstyled"></ul>
                </div>*@

            @*
            <h4><br />Attachments<br /></h4>

            <p>Examples: Checklists, Location Maps, and Research</p>

            <div class="form-group">
                <label for="attachments">Attach Files:</label>
                <input type="file" name="attachments" multiple>
            </div>
            *@
             <div class="form-group">
                    <input type="submit" name="Datsubmit" value="Save" class="btn btn-primary" />
            </div>
            <br />
            <div class="form-group" style="display:none;" id="pjbutton">
                    <input type="submit" name="Datsubmit" value="Save and Create PJ103 Segment" class="btn btn-primary" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" name="Datsubmit" value="Save and Create Additional Item" class="btn btn-primary" />
            </div>
            <br />

                @*  <div class="form-group">
                    <input type="submit" name="Datsubmit" value="Save" class="btn btn-primary" />
               
                    <input type="submit" name="Datsubmit" value="Save and Create PJ103 Segment" class="btn btn-primary" style="display:none;" id="Save and Create PJ103 Segment" />

                    <input type="submit" name="Datsubmit" value="Save and Create Additional Item" class="btn btn-primary" />
                </div>*@
        </div>
    </form>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

@*
    <script>
        let allFiles = []; // Global array to store all files

        // Function to update the file list
        function updateFileList() {
            var fileList = document.getElementById('fileList');
            fileList.innerHTML = ''; // Clear previous content

            allFiles.forEach(function (file, index) {
                var listItem = document.createElement('li');

                // Create and add checkmark with success message
                var checkmark = document.createElement('span');
                checkmark.className = 'checkmark';
                checkmark.innerHTML = 'File Upload Successful! &#10004; '; // Unicode checkmark with a space for separation

                // Create and add file name text
                var textNode = document.createTextNode(file.name + ' ');

                // Create and add remove button
                var removeBtn = document.createElement('button');
                removeBtn.textContent = 'Remove';
                removeBtn.className = 'btn btn-danger btn-sm';
                removeBtn.style.marginLeft = '10px';
                removeBtn.onclick = function () { removeFile(index); }; // Remove file at index

                listItem.appendChild(checkmark);
                listItem.appendChild(textNode);
                listItem.appendChild(removeBtn);

                // Append the composed listItem to fileList
                fileList.appendChild(listItem);
            });
        }

        // Function to handle file removal
        function removeFile(index) {
            allFiles.splice(index, 1); // Remove the file from the array
            updateFileList(); // Update the list display
        }

        // Event listener for file input change
        document.getElementById('fileInput').addEventListener('change', function () {
            Array.from(this.files).forEach(file => allFiles.push(file)); // Add new files to the global array
            updateFileList();
        });
    </script>
    *@
    <script>
        // Function to display file information
        function displayFileInfo(files) {
            var fileInfo = document.getElementById('fileInfo');
            fileInfo.innerHTML = ''; // Clear previous content

            files.forEach(function (file) {
                var fileInfoItem = document.createElement('p');

                // Create and add checkmark
                var checkmark = document.createElement('span');
                checkmark.className = 'checkmark';
                checkmark.innerHTML = '&#10004; '; // Unicode checkmark with a space for separation
                fileInfoItem.appendChild(checkmark);

                // Create and add file details
                var fileDetails = 'File Name: ' + file.name + ', Content Type: ' + file.type + ', File Size: ' + file.size + ' bytes ';
                fileInfoItem.appendChild(document.createTextNode(fileDetails));

                //

                // Append the composed fileInfoItem to fileInfo container
                fileInfo.appendChild(fileInfoItem);
            });
        }

        // Event listener for file input change
        document.getElementById('fileInput').addEventListener('change', function () {
            var fileList = document.getElementById('fileList');
            fileList.innerHTML = ''; // Clear previous content

            var files = this.files;

            // Display file names in the list
            Array.from(files).forEach(function (file) {
                var listItem = document.createElement('li');

                // Create and add checkmark
                var checkmark = document.createElement('span');
                checkmark.className = 'checkmark';
                checkmark.innerHTML = 'File Upload Successful &#10004; :'; // Unicode checkmark with a space for separation
                listItem.appendChild(checkmark);

                // Create and add file name text
                listItem.appendChild(document.createTextNode(file.name));

                // Append the composed listItem to fileList
                fileList.appendChild(listItem);
            });

            // Call function to display file information
            displayFileInfo(files);
        });
    </script>
    @*<script>
        // Function to display file information
        function displayFileInfo(files) {
            var fileInfo = document.getElementById('fileInfo');
            fileInfo.innerHTML = ''; // Clear previous content

            files.forEach(function (file) {
                var fileInfoItem = document.createElement('p');
                fileInfoItem.textContent = 'File Name: ' + file.name + ', Content Type: ' + file.type + ', File Size: ' + file.size + ' bytes';
                fileInfo.appendChild(fileInfoItem);
            });
        }

        // Event listener for file input change
        document.getElementById('fileInput').addEventListener('change', function () {
            var fileList = document.getElementById('fileList');
            fileList.innerHTML = ''; // Clear previous content

            var files = this.files;

            // Display file names in the list
            Array.from(files).forEach(function (file) {
                var listItem = document.createElement('li');
                listItem.textContent = file.name;
                fileList.appendChild(listItem);
            });

            // Call function to display file information
            displayFileInfo(files);
        });
    </script>*@
@*
    <script>
        // Function to display file information
        function displayFileInfo(files) {
            var fileInfo = document.getElementById('fileInfo');
            fileInfo.innerHTML = ''; // Clear previous content

            files.forEach(function (file) {
                var fileInfoItem = document.createElement('p');
                fileInfoItem.textContent = 'File Name: ' + file.name + ', Content Type: ' + file.type + ', File Size: ' + file.size + ' bytes';
                fileInfo.appendChild(fileInfoItem);
            });
        }

        // Event listener for file input change
        document.getElementById('fileInput').addEventListener('change', function () {
            var fileList = document.getElementById('fileList');
            fileList.innerHTML = ''; // Clear previous content

            var files = this.files;

            // Display file names in the list
            Array.from(files).forEach(function (file) {
                var listItem = document.createElement('li');
                listItem.textContent = file.name;
                fileList.appendChild(listItem);
            });

            // Call function to display file information
            displayFileInfo(files);
        });
    </script>
*@



    <script>
        // Function to validate positive numbers
        function validatePositiveNumberAndDecimal(event) {
            if (event.keyCode === 189 || event.keyCode === 109 || event.key === ".") {
                event.preventDefault(); // Doesn't allow -
            }
        }
    </script>


    <script>
        // Function to validate positive numbers
        function validatePositiveNumber(event) {
            if (event.keyCode === 189 || event.keyCode === 109) {
                event.preventDefault(); // Doesn't allow -
            }
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to calculate the sum and update AdjacentProperty
            function updateSum() {
                var sum = 0;
                // Loop through each input field with class 'calculate-sum'
                $('.calculate-sum').each(function () {
                    var value = parseFloat($(this).val()) || 0; // Parse value as float, default to 0 if NaN
                    sum += value;
                });
                // Update the value of AdjacentProperty
                $('#AdjacentProperty').val(sum);
            }

            // Attach the updateSum function to the change event of input fields
            $('.calculate-sum').change(updateSum);
        });
    </script>


    <script>
        $(document).ready(function () {
            $("#RequestedBy").change(function () {
                if ($(this).val()) {
                    $("#RequestedByNameContainer").show();
                    $("#RequestedByName").attr("required", "required");
                } else {
                    $("#RequestedByNameContainer").hide();
                    $("#RequestedByName").removeAttr("required");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#RailroadInv").change(function () {
                if ($(this).val() === "True") {
                    $("#DOTAARNumberContainer").show();
                    $("#DOTAARNumber").attr("required", "required");
                } else {
                    $("#DOTAARNumberContainer").hide();
                    $("#DOTAARNumber").removeAttr("required");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#BridgeInv").change(function () {
                if ($(this).val() === "True") {
                    $("#BridgeNumbersContainer").show();
                    $("#BridgeNumber").attr("required", "required");
                } else {
                    $("#BridgeNumbersContainer").hide();
                    $("#BridgeNumber").removeAttr("required");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#RailroadInv").change(function () {
                if ($(this).val() === "True") {
                    $("#RailroadAmountContainer").show();
                    $("#RailroadAmount").attr("required", "required");
                } else {
                    $("#RailroadAmountContainer").hide();
                    $("#RailroadAmount").removeAttr("required");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#BridgeInv").change(function () {
                if ($(this).val() === "True") {
                    $("#BridgeAmountContainer").show();
                    $("#BridgeAmount").attr("required", "required");
                } else {
                    $("#BridgeAmountContainer").hide();
                    $("#BridgeAmount").removeAttr("required");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#RightOfWayWidth").change(function () {
                if ($(this).val() === "Other") {
                    $("#RightOtherContainer").show();
                    $("#RightOther").attr("required", "required");
                } else {
                    $("#RightOtherContainer").hide();
                    $("#RightOther").removeAttr("required");
                }
            });
        });
    </script>
   
    <script>
        $(document).ready(function () {
            // Assuming the dropdown has an ID of "RoadChangeType"
            $("#RoadChangeType").change(function () {
                // Assuming "Amend" is one of the values in the dropdown
                if ($(this).val() === "Amend") {
                    $("#RoadContainer").show();
                    $("#CoDate").attr("required", "required");
                    $("#CoDateTwoContainer").show();
                } else {
                    $("#RoadContainer").hide();
                    $("#CoDate").removeAttr("required");
                    $("#CoDateTwoContainer").hide();
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            // Assuming the dropdown has an ID of "RoadChangeType"
            $("#RoadChangeType").change(function () {
                // Assuming "Other" is one of the values in the dropdown
                if ($(this).val() === "Other") {
                    $("#OtherboxContainer").show();
                    $("#Otherbox").attr("required", "required");
                } else {
                    $("#OtherboxContainer").hide();
                    $("#Otherbox").removeAttr("required");
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $("#APOther").change(function () {
                if ($(this).val() > 0) {
                    $("#APOtherIdentifyContainer").show();
                    $("#APOtherIdentify").attr("required", "required");
                } else {
                    $("#APOtherIdentifyContainer").hide();
                    $("#APOtherIdentify").removeAttr("required");
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#RoadChangeType").change(function () {
                if ($(this).val() === "Addition" || $(this).val() === "Redesignation") {
                    $("#pjbutton").show();
                    
                } else {
                    $("#pjbutton").hide();
                    
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to check the value of RoadChangeType and set required attribute
            function checkRoadChangeType() {
                var roadChangeType = $('#RoadChangeType').val();
                if (roadChangeType === 'Addition' || roadChangeType === 'Redesignation') {
                    $('#RightOfWayWidth').attr('required', 'required');
                } else {
                    $('#RightOfWayWidth').removeAttr('required');
                }
            }

            // Check on page load
            checkRoadChangeType();

            // Check on change of the dropdown
            $('#RoadChangeType').change(function () {
                checkRoadChangeType();
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#RoadChangeType').on('click', function () {
                $('#RoadChangeType option[value=""]').prop('disabled', true);
            });
            $('#RequestedBy').on('click', function () {
                $('#RequestedBy option[value=""]').prop('disabled', true);
            });

            $('#RouteAssignment').on('click', function () {
                $('#RouteAssignment option[value=""]').prop('disabled', true);
            });

            $('#RightOfWayWidth').on('click', function () {
                $('#RightOfWayWidth option[value=""]').prop('disabled', true);
            });

            $('#BridgeInv').on('click', function () {
                $('#BridgeInv option[value=""]').prop('disabled', true);
            });

            $('#RailroadInv').on('click', function () {
                $('#RailroadInv option[value=""]').prop('disabled', true);
            });

            $('#SignSystem').on('click', function () {
                $('#SignSystem option[value=""]').prop('disabled', true);
            });

            $('#MaintOrg').on('click', function () {
                $('#MaintOrg option[value=""]').prop('disabled', true);
            });

            $('#YearOfSurvey').on('click', function () {
                $('#YearOfSurvey option[value=""]').prop('disabled', true);
            });
        });
    </script>

    @* <script>
        $(document).ready(function () {
            var asterisk = 'class="required-asterisk" >*';
            var roadChangeTypeDropdown = $("#RoadChangeType");
            function toggleAsterisk() {
                if ($(this).val() === "Addition") {
                    $("#AdjacentProperty").attr("required", "required");
                    $("#asteriskContainer").html(asterisk);
                } else {
                    $("#AdjacentProperty").removeAttr("required");
                    $("#asteriskContainer").empty();
                }
            }
            toggleAsterisk();
            $("#RoadChangeType").change(function () {
                toggleAsterisk();
            });
        });
    </script>   *@


    <script>
        $(document).ready(function () {
            // Assuming checkboxes have IDs "AdditionCheckbox", "AbandonmentCheckbox", and "RedesignationCheckbox"
            $("#AdditionCheckbox, #AbandonmentCheckbox, #RedesignationCheckbox").change(function () {
                // Check if any of the checkboxes are checked
                var additionChecked = $("#AdditionCheckbox").prop("checked");
                var abandonmentChecked = $("#AbandonmentCheckbox").prop("checked");
                var redesignationChecked = $("#RedesignationCheckbox").prop("checked");

                // Your logic based on checkbox states
                if (additionChecked || abandonmentChecked || redesignationChecked) {
                    // Your code when at least one checkbox is checked
                    $("#AdjacentProperty").attr("required", "required");
                    $("#asteriskContainer").html('<span class="required-asterisk">*</span>');
                    // Additional logic if needed
                } else {
                    // Your code when none of the checkboxes are checked
                    $("#AdjacentProperty").removeAttr("required");
                    $("#asteriskContainer").empty();
                    // Additional logic if needed
                }
            });
        });
    </script>

    <script>
         $(document).ready(function () {
             // Get references to the dropdowns
             var districtDropdown = $("#districtDropdown");
             var countyDropdown = $("#countyDropdown");

             // Define a mapping of DistrictNumber to counties
             var districtToCounties = {
        "1": ["Boone", "Clay", "Kanawha", "Mason","Putnam" ],
         "2": ["Cabell", "Lincoln", "Logan", "Mingo", "Wayne"],
         "3": ["Calhoun", "Jackson", "Pleasants","Ritchie", "Roane", "Wirt", "Wood" ],
         "4": ["Doddridge","Harrison", "Marion","Monongalia","Preston","Taylor" ],
         "5": ["Berkeley", "Grant", "Hampshire", "Hardy", "Jefferson", "Mineral", "Morgan" ],
         "6": ["Brooke","Hancock", "Marshall", "Ohio", "Tyler", "Wetzel" ],
         "7": ["Barbour", "Braxton", "Gilmer","Lewis", "Upshur", "Webster" ],
         "8": ["Pendleton", "Pocahontas", "Randolph", "Tucker" ],
         "9": ["Fayette","Greenbrier", "Monroe","Nicholas", "Summers" ],
         "10": ["McDowell", "Mercer", "Raleigh", "Wyoming" ]
                 // Add more mappings as needed
             };

             // Event handler for DistrictNumber dropdown change
             districtDropdown.change(function () {
                 var selectedDistrict = districtDropdown.val();
                 var counties = districtToCounties[selectedDistrict] || [];

                 // Clear the County dropdown and add the new options
                 countyDropdown.empty();
                 countyDropdown.append('<option value="">Select District First</option>');

                 $.each(counties, function (index, county) {
                     countyDropdown.append('<option value="' + county + '">' + county + '</option>');
                 });
             });

             // Trigger the change event to populate the County dropdown initially
             districtDropdown.trigger('change');
         });
    </script>




}
<style>
    .button-container {
        margin-top: 10px; /* Add desired margin value */
    }

    .required-asterisk {
        font-size: 24px;
        color: red;
    }

    .success-message {
        color: green;
        font-weight: bold;
    }

    .checkmark {
        color: green;
        margin-right: 5px;
    }
</style>